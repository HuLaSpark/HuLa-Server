luohuo:
  swagger:
    version: '@project.version@'
  nacos:
    ip: ${NACOS_IP:@nacos.ip@}
    port: ${NACOS_PORT:@nacos.port@}
    namespace: ${NACOS_NAMESPACE:@nacos.namespace@}
    username: ${NACOS_USERNAME:@nacos.username@}
    password: ${NACOS_PASSWORD:@nacos.password@}
    web-port: ${NACOS_WEB_PORT:@nacos.web-port@}
  seata:
    ip: ${SEATA_IP:@seata.ip@}
    port: ${SEATA_PORT:@seata.port@}
    namespace: ${SEATA_NAMESPACE:@seata.namespace@}
  sentinel:
    dashboard: ${SENTINEL_DASHBOARD:@sentinel.dashboard@}

spring:
  main:
    allow-bean-definition-overriding: true
  application:
    name: @project.artifactId@
    # luohuo自定义配置，用于luohuo-scan-starter扫描接口时，拼接uri前缀。 需要和网关配置的前缀一致
    path: /system
  profiles:
    active: @profile.active@
  cloud:
    sentinel:
      enabled: true
      filter:
        enabled: true
      eager: true  # 取消Sentinel控制台懒加载
      transport:
        dashboard: ${luohuo.sentinel.dashboard}
    nacos:
      config:
        server-addr: ${luohuo.nacos.ip}:${luohuo.nacos.port}
        file-extension: yml
        namespace: ${luohuo.nacos.namespace}
        shared-configs:
          - dataId: common.yml
            refresh: true
          - dataId: redis.yml
            refresh: false
          - dataId: @database.type@
            refresh: true
          - dataId: rocketmq.yml
            refresh: true
        enabled: true
        username: ${luohuo.nacos.username}
        password: ${luohuo.nacos.password}
      discovery:
        username: ${luohuo.nacos.username}
        password: ${luohuo.nacos.password}
        server-addr: ${luohuo.nacos.ip}:${luohuo.nacos.port}
        namespace: ${luohuo.nacos.namespace}
        metadata: # 元数据，用于权限服务实时获取各个服务的所有接口
          management.context-path: ${server.servlet.context-path:}${spring.mvc.servlet.path:}${management.endpoints.web.base-path:}
          grayversion: luohuo

logging:
  file:
    path: '@logging.file.path@'
    name: ${logging.file.path}/${spring.application.name}/root.log
  config: classpath:logback-spring.xml
  level:
    druid.sql.Statement: debug
# 用于/actuator/info
info:
  name: '@project.name@'
  description: '@project.description@'
  version: '@project.version@'
