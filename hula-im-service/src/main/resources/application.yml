server:
  port: 9190
xss:
  enabled: true
  requestBodyEnabled: true
  order: -100
  ignorePaths:
    - /doc.html
    - /swagger-ui.html
    - /v2/api-docs
    - /v3/api-docs
    - /csrf
    - /webjars/**
    - /swagger-resources/**
    - /static/**
    - /public/static/**
    - /public/download/**
    - /actuator/health
    - /actuator/info
    - /noxss/**
    - /activiti/**
    - /service/model/**
    - /service/editor/**
logging:
  level:
    com.hula.service.web: INFO
    com.github.binarywang.demo.wx.mp: DEBUG
    me.chanjar.weixin: DEBUG
    com.hula.ai.gpt.mapper: DEBUG
  pattern:
    dateformat: "yyyy-MM-dd HH:mm:ss"
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread]-[%-3level ]-[tid：%X{tid}]-[%c]：%L：%m%n"
spring:
  # 使用的配置文件
  profiles:
    active: dev
  application:
    name: hula
  #数据库连接配置
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${HuLa-IM.HOST}:${HuLa-IM.MYSQL_PORT}/${HuLa-IM.DATABASE_NAME}?serverTimezone=GMT%2b8
    username: ${HuLa-IM.MYSQL_USER_NAME}
    password: ${HuLa-IM.MYSQL_PASSWORD}
    type: com.zaxxer.hikari.HikariDataSource
    hikari: # 配置(毫秒)
      auto-commit: true #是否默认提交事务 (默认值：true)
      idle-timeout: 10000 #控制连接在池中允许空闲的最长时间
      connection-timeout: 30000 #请求连接的超时时间
      maximum-pool-size: 20 #最大连接数
      minimum-idle: 5 #最小空闲连接数量
      max-lifetime: 1800000 #连接的最长生命周期
      keepalive-time: 1750000 #尝试保持连接的频率
      connection-test-query: select 1 #连接验证sql
      pool-name: HikariCP-hula
  mvc:
    pathmatch:
      matching-strategy: ANT_PATH_MATCHER

  #redis配置
  data:
    redis:
      # Redis数据库索引（默认为0）
      database: 0
      # Redis服务器地址
      host: ${HuLa-IM.HOST}
      # Redis服务器连接端口
      port: ${HuLa-IM.REDIS.PORT}
      # Redis服务器连接密码（默认为空）
      password: ${HuLa-IM.REDIS.PAW}
      # 连接超时时间
      timeout: 1800000
  mail:
    host: ${HuLa-IM.mail.host}            # 邮箱SMTP服务器
    port: ${HuLa-IM.mail.port}            # SSL端口
    username: ${HuLa-IM.mail.username}    # 发件人邮箱
    password: ${HuLa-IM.mail.password}    # 邮箱SMTP授权码
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
          ssl:
            enable: false
            protocols: TLSv1.2 # 加密协议

  # jackson配置
  jackson:
    serialization:
      write-dates-as-timestamps: true # 序列化
    date-format: yyyy-MM-dd HH:mm:ss # 日期格式化
    deserialization:
      fail-on-unknown-properties: false # false表示处理多余字段不抛异常


#mybatis-plus 配置
mybatis-plus:
  global-config:
    banner: false # 关闭MP图案打印
  mapper-locations: classpath:mapper/**/*.xml
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    map-underscore-to-camel-case: true

# 微信扫码配置
wx:
  mp:
    callback: ${HuLa-IM.WX.CALLBACK}
    configs:
      - appId: ${HuLa-IM.WX.APPID} # 第一个公众号的appid
        secret: ${HuLa-IM.WX.SECRET} # 公众号的appsecret
        token: ${HuLa-IM.WX.TOKEN} # 接口配置里的Token值
        aesKey: ${HuLa-IM.WX.AESKEY} # 接口配置里的EncodingAESKey值
# JWT
jwt:
  secret: ${HuLa-IM.JWT.SECRET}

# doc配置
springdoc:
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
  api-docs:
    path: /v3/api-docs
  group-configs:
    - group: 'core'
      paths-to-match: '/**'
      packages-to-scan: com.hula.core
knife4j:
  # 开启增强配置
  enable: true
  setting:
    language: zh_cn

# rocketmq配置
rocketmq:
  name-server: ${HuLa-IM.ROCKETMQ.NAME-SERVER}
  # 默认的消息组
  producer:
    group: chatGroup
    send-message-timeout: 3000 # 发送消息超时时间，单位：毫秒。默认为 3000 。
    compress-message-body-threshold: 4096 # 消息压缩阀值，当消息体的大小超过该阀值后，进行消息压缩。默认为 4 * 1024B
    max-message-size: 4194304 # 消息体的最大允许大小。。默认为 4 * 1024 * 1024B
    retry-times-when-send-failed: 2 # 同步发送消息时，失败重试次数。默认为 2 次。
    retry-times-when-send-async-failed: 2 # 异步发送消息时，失败重试次数。默认为 2 次。
    retry-next-server: false # 发送消息给 Broker 时，如果发送失败，是否重试另外一台 Broker 。默认为 false
    access-key: ${HuLa-IM.ROCKETMQ.ACCESS-KEY} # Access Key ，可阅读 https://github.com/apache/rocketmq/blob/master/docs/cn/acl/user_guide.md 文档
    secret-key: ${HuLa-IM.ROCKETMQ.SECRET-KEY} # Secret Key
    enable-msg-trace: true # 是否开启消息轨迹功能。默认为 true 开启。可阅读 https://github.com/apache/rocketmq/blob/master/docs/cn/msg_trace/user_guide.md 文档
    customized-trace-topic: RMQ_SYS_TRACE_TOPIC # 自定义消息轨迹的 Topic 。默认为 RMQ_SYS_TRACE_TOPIC 。
  # Consumer 配置项
  consumer:
    access-key: ${HuLa-IM.ROCKETMQ.ACCESS-KEY} # Access Key ，可阅读 https://github.com/apache/rocketmq/blob/master/docs/cn/acl/user_guide.md 文档
    secret-key: ${HuLa-IM.ROCKETMQ.SECRET-KEY} # Secret Key
    listeners: # 配置某个消费分组，是否监听指定 Topic 。结构为 Map<消费者分组, <Topic, Boolean>> 。默认情况下，不配置表示监听。
      erbadagang-consumer-group:
        topic1: false # 关闭 test-consumer-group 对 topic1 的监听消费

public:
  urls:
    - /system/config/init
    - /token/login
    - /token/refreshToken
    - /token/register
    - /captcha/captcha
    - /captcha/sendCode
    - /token/forgotPassword
    - /doc.html
    - /webjars/**
    - /v3/api-docs
